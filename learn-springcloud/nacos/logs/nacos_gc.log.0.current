Java HotSpot(TM) 64-Bit Server VM (25.172-b11) for windows-amd64 JRE (1.8.0_172-b11), built on Mar 28 2018 21:21:52 by "java_re" with MS VC++ 10.0 (VS2010)
Memory: 4k page, physical 14539512k(3934788k free), swap 44559932k(5819796k free)
CommandLine flags: -XX:CompressedClassSpaceSize=327155712 -XX:GCLogFileSize=104857600 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=L:/JAVA/springcloud/learn-springcloud/nacos/logs/java_heapdump.hprof -XX:InitialHeapSize=2147483648 -XX:MaxHeapSize=2147483648 -XX:MaxMetaspaceSize=335544320 -XX:MaxNewSize=1073741824 -XX:MetaspaceSize=134217728 -XX:NewSize=1073741824 -XX:NumberOfGCLogFiles=10 -XX:-OmitStackTraceInFastThrow -XX:+PrintGC -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseGCLogFileRotation -XX:-UseLargePages -XX:-UseLargePagesIndividualAllocation -XX:+UseParallelGC 
2023-07-21T16:30:03.442+0800: 1.663: [GC (Allocation Failure) [PSYoungGen: 786432K->9339K(917504K)] 786432K->9435K(1966080K), 0.0063741 secs] [Times: user=0.17 sys=0.03, real=0.01 secs] 
2023-07-21T16:30:04.357+0800: 2.578: [GC (Allocation Failure) [PSYoungGen: 795771K->16652K(917504K)] 795867K->16772K(1966080K), 0.0129027 secs] [Times: user=0.05 sys=0.00, real=0.01 secs] 
